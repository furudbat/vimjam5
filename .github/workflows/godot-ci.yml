name: Godot CI/CD Pipeline

on:
  push:
    branches:
      - main
      - develop
  pull_request:

jobs:
  import-assets:
    runs-on: ubuntu-latest
    container: barichello/godot-ci:4.3
    steps:
      - uses: actions/checkout@v4
      - name: Cache import assets
        uses: actions/cache@v3
        with:
          path: .godot/imported/
          key: import-assets-${{ runner.os }}-${{ github.sha }}
      - name: Import assets
        run: godot --headless --verbose --editor --quit

  export-game:
    runs-on: ubuntu-latest
    permissions: write-all
    needs: import-assets
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v3
        with:
          path: .godot/imported/
          key: import-assets-${{ runner.os }}-${{ github.sha }}
      - name: install wine
        id: wine_install
        run: |
          sudo apt install wine64
          echo "WINE_PATH=$(which wine64)" >> $GITHUB_OUTPUT
      - name: export Game using Godot
        id: export
        uses: firebelley/godot-export@v6.0.0
        with:
          godot_executable_download_url: https://downloads.tuxfamily.org/godotengine/4.3/Godot_v4.3-stable_linux.x86_64.zip
          godot_export_templates_download_url: https://downloads.tuxfamily.org/godotengine/4.3/Godot_v4.3-stable_export_templates.tpz
          relative_project_path: "./godot"
          #relative_export_path: "./out"
          archive_output: true
          cache: false
          wine_path: ${{ steps.wine_install.outputs.WINE_PATH }}
      - name: create release
        if: ${{ github.ref == 'refs/heads/main' }}
        uses: ncipollo/release-action@v1.14.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.ref_name }}
          artifacts: ${{ steps.export.outputs.archive_directory }}/*

  deploy-to-itchio-linux:
    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    needs: export-game
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: LinuxX11
      - name: Deploy to Itch.io (Windows)
        uses: manleydev/butler-publish-itchio-action@master
        env:
          BUTLER_CREDENTIALS: ${{ secrets.BUTLER_API_KEY }}
          CHANNEL: linux
          ITCH_GAME: ${{ secrets.ITCHIO_GAME }}
          ITCH_USER: ${{ secrets.ITCHIO_USERNAME }}
          PACKAGE: LinuxX11.zip

  deploy-to-itchio-windows:
    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    needs: export-game
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: Windows
      - name: Deploy to Itch.io (Windows)
        uses: manleydev/butler-publish-itchio-action@master
        env:
          BUTLER_CREDENTIALS: ${{ secrets.BUTLER_API_KEY }}
          CHANNEL: windows
          ITCH_GAME: ${{ secrets.ITCHIO_GAME }}
          ITCH_USER: ${{ secrets.ITCHIO_USERNAME }}
          PACKAGE: Windows.zip

  deploy-to-itchio-mac:
    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    needs: export-game
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: macOS
      - name: Deploy to Itch.io (MacOS)
        uses: manleydev/butler-publish-itchio-action@master
        env:
          BUTLER_CREDENTIALS: ${{ secrets.BUTLER_API_KEY }}
          CHANNEL: mac
          ITCH_GAME: ${{ secrets.ITCHIO_GAME }}
          ITCH_USER: ${{ secrets.ITCHIO_USERNAME }}
          PACKAGE: macOS.zip

  deploy-to-itchio-web:
    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    needs: export-game
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: Web
      - name: Deploy to Itch.io (HTML5)
        uses: manleydev/butler-publish-itchio-action@master
        env:
          BUTLER_CREDENTIALS: ${{ secrets.BUTLER_API_KEY }}
          CHANNEL: web
          ITCH_GAME: ${{ secrets.ITCHIO_GAME }}
          ITCH_USER: ${{ secrets.ITCHIO_USERNAME }}
          PACKAGE: Web.zip
